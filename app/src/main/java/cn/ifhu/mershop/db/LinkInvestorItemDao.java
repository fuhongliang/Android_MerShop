//package cn.ifhu.mershop.db;
//
//import android.database.Cursor;
//import android.database.sqlite.SQLiteStatement;
//
//import com.a88meeting.irdashboard.bean.LinkInvestorItem;
//
//import org.greenrobot.greendao.AbstractDao;
//import org.greenrobot.greendao.Property;
//import org.greenrobot.greendao.database.Database;
//import org.greenrobot.greendao.database.DatabaseStatement;
//import org.greenrobot.greendao.internal.DaoConfig;
//
//// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
//
///**
// * DAO for table "LINK_INVESTOR_ITEM".
//*/
//public class LinkInvestorItemDao extends AbstractDao<LinkInvestorItem, Long> {
//
//    public static final String TABLENAME = "LINK_INVESTOR_ITEM";
//
//    /**
//     * Properties of entity LinkInvestorItem.<br/>
//     * Can be used for QueryBuilder and for referencing column names.
//     */
//    public static class Properties {
//        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
//        public final static Property Uuid = new Property(1, String.class, "uuid", false, "UUID");
//        public final static Property Name_zh = new Property(2, String.class, "name_zh", false, "NAME_ZH");
//        public final static Property Name_en = new Property(3, String.class, "name_en", false, "NAME_EN");
//        public final static Property Mobile = new Property(4, String.class, "mobile", false, "MOBILE");
//        public final static Property Email = new Property(5, String.class, "email", false, "EMAIL");
//        public final static Property Company_zh = new Property(6, String.class, "company_zh", false, "COMPANY_ZH");
//        public final static Property Company_en = new Property(7, String.class, "company_en", false, "COMPANY_EN");
//        public final static Property Avatar = new Property(8, String.class, "avatar", false, "AVATAR");
//        public final static Property Has_notes = new Property(9, boolean.class, "has_notes", false, "HAS_NOTES");
//        public final static Property Type = new Property(10, String.class, "type", false, "TYPE");
//        public final static Property Is_match = new Property(11, boolean.class, "is_match", false, "IS_MATCH");
//        public final static Property Name = new Property(12, String.class, "name", false, "NAME");
//        public final static Property CompanyName = new Property(13, String.class, "companyName", false, "COMPANY_NAME");
//    }
//
//
//    public LinkInvestorItemDao(DaoConfig config) {
//        super(config);
//    }
//
//    public LinkInvestorItemDao(DaoConfig config, DaoSession daoSession) {
//        super(config, daoSession);
//    }
//
//    /** Creates the underlying database table. */
//    public static void createTable(Database db, boolean ifNotExists) {
//        String constraint = ifNotExists? "IF NOT EXISTS ": "";
//        db.execSQL("CREATE TABLE " + constraint + "\"LINK_INVESTOR_ITEM\" (" + //
//                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
//                "\"UUID\" TEXT," + // 1: uuid
//                "\"NAME_ZH\" TEXT," + // 2: name_zh
//                "\"NAME_EN\" TEXT," + // 3: name_en
//                "\"MOBILE\" TEXT," + // 4: mobile
//                "\"EMAIL\" TEXT," + // 5: email
//                "\"COMPANY_ZH\" TEXT," + // 6: company_zh
//                "\"COMPANY_EN\" TEXT," + // 7: company_en
//                "\"AVATAR\" TEXT," + // 8: avatar
//                "\"HAS_NOTES\" INTEGER NOT NULL ," + // 9: has_notes
//                "\"TYPE\" TEXT," + // 10: type
//                "\"IS_MATCH\" INTEGER NOT NULL ," + // 11: is_match
//                "\"NAME\" TEXT," + // 12: name
//                "\"COMPANY_NAME\" TEXT);"); // 13: companyName
//    }
//
//    /** Drops the underlying database table. */
//    public static void dropTable(Database db, boolean ifExists) {
//        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"LINK_INVESTOR_ITEM\"";
//        db.execSQL(sql);
//    }
//
//    @Override
//    protected final void bindValues(DatabaseStatement stmt, LinkInvestorItem entity) {
//        stmt.clearBindings();
//
//        Long id = entity.getId();
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//
//        String uuid = entity.getUuid();
//        if (uuid != null) {
//            stmt.bindString(2, uuid);
//        }
//
//        String name_zh = entity.getName_zh();
//        if (name_zh != null) {
//            stmt.bindString(3, name_zh);
//        }
//
//        String name_en = entity.getName_en();
//        if (name_en != null) {
//            stmt.bindString(4, name_en);
//        }
//
//        String mobile = entity.getMobile();
//        if (mobile != null) {
//            stmt.bindString(5, mobile);
//        }
//
//        String email = entity.getEmail();
//        if (email != null) {
//            stmt.bindString(6, email);
//        }
//
//        String company_zh = entity.getCompany_zh();
//        if (company_zh != null) {
//            stmt.bindString(7, company_zh);
//        }
//
//        String company_en = entity.getCompany_en();
//        if (company_en != null) {
//            stmt.bindString(8, company_en);
//        }
//
//        String avatar = entity.getAvatar();
//        if (avatar != null) {
//            stmt.bindString(9, avatar);
//        }
//        stmt.bindLong(10, entity.getHas_notes() ? 1L: 0L);
//
//        String type = entity.getType();
//        if (type != null) {
//            stmt.bindString(11, type);
//        }
//        stmt.bindLong(12, entity.getIs_match() ? 1L: 0L);
//
//        String name = entity.getName();
//        if (name != null) {
//            stmt.bindString(13, name);
//        }
//
//        String companyName = entity.getCompanyName();
//        if (companyName != null) {
//            stmt.bindString(14, companyName);
//        }
//    }
//
//    @Override
//    protected final void bindValues(SQLiteStatement stmt, LinkInvestorItem entity) {
//        stmt.clearBindings();
//
//        Long id = entity.getId();
//        if (id != null) {
//            stmt.bindLong(1, id);
//        }
//
//        String uuid = entity.getUuid();
//        if (uuid != null) {
//            stmt.bindString(2, uuid);
//        }
//
//        String name_zh = entity.getName_zh();
//        if (name_zh != null) {
//            stmt.bindString(3, name_zh);
//        }
//
//        String name_en = entity.getName_en();
//        if (name_en != null) {
//            stmt.bindString(4, name_en);
//        }
//
//        String mobile = entity.getMobile();
//        if (mobile != null) {
//            stmt.bindString(5, mobile);
//        }
//
//        String email = entity.getEmail();
//        if (email != null) {
//            stmt.bindString(6, email);
//        }
//
//        String company_zh = entity.getCompany_zh();
//        if (company_zh != null) {
//            stmt.bindString(7, company_zh);
//        }
//
//        String company_en = entity.getCompany_en();
//        if (company_en != null) {
//            stmt.bindString(8, company_en);
//        }
//
//        String avatar = entity.getAvatar();
//        if (avatar != null) {
//            stmt.bindString(9, avatar);
//        }
//        stmt.bindLong(10, entity.getHas_notes() ? 1L: 0L);
//
//        String type = entity.getType();
//        if (type != null) {
//            stmt.bindString(11, type);
//        }
//        stmt.bindLong(12, entity.getIs_match() ? 1L: 0L);
//
//        String name = entity.getName();
//        if (name != null) {
//            stmt.bindString(13, name);
//        }
//
//        String companyName = entity.getCompanyName();
//        if (companyName != null) {
//            stmt.bindString(14, companyName);
//        }
//    }
//
//    @Override
//    public Long readKey(Cursor cursor, int offset) {
//        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
//    }
//
//    @Override
//    public LinkInvestorItem readEntity(Cursor cursor, int offset) {
//        LinkInvestorItem entity = new LinkInvestorItem( //
//            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
//            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // uuid
//            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // name_zh
//            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // name_en
//            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // mobile
//            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // email
//            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // company_zh
//            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // company_en
//            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // avatar
//            cursor.getShort(offset + 9) != 0, // has_notes
//            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // type
//            cursor.getShort(offset + 11) != 0, // is_match
//            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // name
//            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13) // companyName
//        );
//        return entity;
//    }
//
//    @Override
//    public void readEntity(Cursor cursor, LinkInvestorItem entity, int offset) {
//        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
//        entity.setUuid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
//        entity.setName_zh(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
//        entity.setName_en(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
//        entity.setMobile(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
//        entity.setEmail(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
//        entity.setCompany_zh(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
//        entity.setCompany_en(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
//        entity.setAvatar(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
//        entity.setHas_notes(cursor.getShort(offset + 9) != 0);
//        entity.setType(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
//        entity.setIs_match(cursor.getShort(offset + 11) != 0);
//        entity.setName(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
//        entity.setCompanyName(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
//     }
//
//    @Override
//    protected final Long updateKeyAfterInsert(LinkInvestorItem entity, long rowId) {
//        entity.setId(rowId);
//        return rowId;
//    }
//
//    @Override
//    public Long getKey(LinkInvestorItem entity) {
//        if(entity != null) {
//            return entity.getId();
//        } else {
//            return null;
//        }
//    }
//
//    @Override
//    public boolean hasKey(LinkInvestorItem entity) {
//        return entity.getId() != null;
//    }
//
//    @Override
//    protected final boolean isEntityUpdateable() {
//        return true;
//    }
//
//}
